<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SmileHacker</title><link href="http://smilehacker.com/" rel="alternate"></link><link href="http://smilehacker.com/feeds/python.atom.xml" rel="self"></link><id>http://smilehacker.com/</id><updated>2013-02-07T21:24:06+08:00</updated><entry><title>自动获取Nexus4售卖状态的Python脚本</title><link href="http://smilehacker.com/zi-dong-huo-qu-nexus4shou-mai-zhuang-tai-de-pythonjiao-ben.html" rel="alternate"></link><updated>2013-02-07T21:24:06+08:00</updated><author><name>Sai</name></author><id>tag:smilehacker.com,2013-02-07:zi-dong-huo-qu-nexus4shou-mai-zhuang-tai-de-pythonjiao-ben.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;&lt;img alt="Nexus 4" src="http://i.i.com.com/cnwk.1d/i/tim/2012/12/17/nexus4.png" /&gt;
使用pyquery做爬虫解析GooglePlay页面 获取状态
然后通过Gmail发给指定邮箱
每隔一个小时自动检测一次
使用 &lt;code&gt;&lt;strong&gt;nohup python *.py &amp;amp;&lt;/strong&gt;&lt;/code&gt; 可在后台运行&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;{% codeblock [Python] [lang: python]%}&lt;/p&gt;
&lt;h1&gt;coding=utf-8&lt;/h1&gt;
&lt;h1&gt;easy_install pyquery OR sudo apt-get install python-pyquery&lt;/h1&gt;
&lt;p&gt;from pyquery import PyQuery as pq
import smtplib
from email.Message import Message
import time&lt;/p&gt;
&lt;h1&gt;发给谁&lt;/h1&gt;
&lt;p&gt;mailto_list = "xxx@xx.xx"&lt;/p&gt;
&lt;h1&gt;设置服务器 用户名 口令 邮箱后缀&lt;/h1&gt;
&lt;p&gt;mail_host = "smtp.gmail.com"
mail_user = "xxx@gmail.com"
mail_pass = "you password"&lt;/p&gt;
&lt;p&gt;def sendMail(sub, content):
    '''
    sub:主题
    content:内容
    '''
    msg = Message()
    msg['Subject'] = sub
    msg['From'] = mail_user
    msg['To'] = mailto_list
    msg.set_payload(content)
    try:
        s = smtplib.SMTP(mail_host, port=587, timeout=200)
        s.starttls()
        s.login(mail_user, mail_pass)
        s.sendmail(mail_user, mailto_list, msg.as_string())
        return True
    except Exception, e:
        print str(e)
        return False&lt;/p&gt;
&lt;p&gt;def checkSoldState():
    doc = pq(url = r'https://play.google.com/store/devices/details?id=nexus_4_16gb')
    soldMsg = doc('span').filter('.hardware-price-description').text()
    print soldMsg
    if soldMsg != 'Sold out':
        print 'sent mail'
        sendMail('Nexus4 Info', 'Sold out')&lt;/p&gt;
&lt;p&gt;def say():
    print "hello"&lt;/p&gt;
&lt;h1&gt;main&lt;/h1&gt;
&lt;p&gt;while True:
    checkSoldState()
    time.sleep(3600)
[/python]&lt;/p&gt;
&lt;p&gt;{% endcodeblock %}&lt;/p&gt;</summary><category term=""></category></entry></feed>